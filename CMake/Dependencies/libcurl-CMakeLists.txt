cmake_minimum_required(VERSION 3.6.3)

project(libcurl-download NONE)

find_program(MAKE_EXE NAMES make)

if (DEFINED CMAKE_OSX_SYSROOT AND NOT CMAKE_OSX_SYSROOT STREQUAL "")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -isysroot${CMAKE_OSX_SYSROOT}")
endif()

include(ExternalProject)

set(BUILD_SHARED_LIBS 1)
if (BUILD_STATIC)
    set(BUILD_SHARED_LIBS 0)
endif()

set(CMAKE_ARGS
        -DCMAKE_FIND_ROOT_PATH=${CMAKE_FIND_ROOT_PATH}
        -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
        -DANDROID_TOOLCHAIN=clang
        -DANDROID_ABI=${ANDROID_ABI}
        -DANDROID_NDK=${ANDROID_NDK}
        -DANDROID_PLATFORM=${ANDROID_PLATFORM}
        -DCMAKE_ANDROID_ARCH_ABI=${CMAKE_ANDROID_ARCH_ABI}
        -DCMAKE_ANDROID_NDK=${CMAKE_ANDROID_NDK}
        -DCMAKE_SYSTEM_NAME=Android
        -DCMAKE_SYSTEM_VERSION=${CMAKE_SYSTEM_VERSION}
        -DCMAKE_BUILD_TYPE=Release
        -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS}
        -DCMAKE_INSTALL_PREFIX=${OPEN_SRC_INSTALL_PREFIX}
        -DBUILD_CURL_EXE=0
        -DHTTP_ONLY=1)

# By default use openssl
if (USE_MBEDTLS)
    set(CMAKE_ARGS ${CMAKE_ARGS} -DCMAKE_USE_MBEDTLS=1)
endif()

if (WIN32)
    set(CMAKE_ARGS ${CMAKE_ARGS} -DCMAKE_USE_WINSSL=1 -DCURL_STATIC_CRT=1)
endif()

ExternalProject_Add(project_libcurl
    GIT_REPOSITORY    https://github.com/curl/curl.git
    GIT_TAG           curl-7_68_0
    PREFIX            ${CMAKE_CURRENT_BINARY_DIR}/build
    CMAKE_ARGS        ${CMAKE_ARGS}
    BUILD_ALWAYS      TRUE
    TEST_COMMAND      "")
